services:
  accountsdb:
    image: mysql
    container_name: accountsdb
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: accountsdb
    extends:
      file: common-config.yml
      service: microservices-db-config

  loansdb:
    image: mysql
    container_name: loansdb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: loansdb
    extends:
      file: common-config.yml
      service: microservices-db-config

  cardsdb:
    image: mysql
    container_name: cardsdb
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: cardsdb
    extends:
      file: common-config.yml
      service: microservices-db-config

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: keycloak
    ports:
      - "7080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    extends:
      file: common-config.yml
      service: network-deploy-services

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-services

  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-services

  configserver:
    image: "ar2030/configserver:v7"
    container_name: "configserver-ms"
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8071/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservices-base-config

  eurekaserver:
    image: "ar2030/eurekaserver:v7"
    container_name: "eurekaserver-ms"
    ports:
      - "8070:8070"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    extends:
      file: common-config.yml
      service: microservices-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

  # note: ports are not exposed for internal microservices
  accounts:
    image: "ar2030/accounts:v7"
    container_name: "accounts-ms"
    environment:
      SPRING_APPLICATION_NAME: accounts
      SPRING_DATASOURCE_URL: jdbc:mysql://accountsdb:3306/accountsdb
    depends_on:
      accountsdb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservices-eureka-config

  # note: ports are not exposed for internal microservices
  loans:
    image: "ar2030/loans:v7"
    container_name: "loans-ms"
    environment:
      SPRING_APPLICATION_NAME: loans
      SPRING_DATASOURCE_URL: jdbc:mysql://loansdb:3306/loansdb
    depends_on:
      loansdb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservices-eureka-config

  # note: ports are not exposed for internal microservices
  cards:
    image: "ar2030/cards:v7"
    container_name: "cards-ms"
    environment:
      SPRING_APPLICATION_NAME: cards
      SPRING_DATASOURCE_URL: jdbc:mysql://cardsdb:3306/cardsdb
    depends_on:
      cardsdb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservices-eureka-config

  gatewayserver:
    image: "ar2030/gatewayserver:v7"
    container_name: "gatewayserver-ms"
    ports:
      - "8072:8072"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8072/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservices-eureka-config
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_CONNECT-TIMEOUT: 2s
      SPRING_DATA_REDIS_TIMEOUT: 1s
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: "http://keycloak:8080/realms/master/protocol/openid-connect/certs" # Mentioned keycloak hostname then the internal port because it's within the same docker network

networks:
  finbank:
    driver: bridge