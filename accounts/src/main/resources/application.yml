server:
  port: 8080
spring:
  application:
    name: accounts  # must be the same as prefix of profiles in config repo
  profiles:
      active: prod
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: never
  config:
    import: "optional:configserver:http://localhost:8071"  # config server url
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
        definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent  # the exchange name
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication  # the exchange name

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
info:
  app:
    name: "Accounts Microservice"
    description: "Microservice for managing bank accounts"
    version: 4.0.0

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

